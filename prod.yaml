version: "2.4"

services:
  odoo:
    extends:
      file: common.yaml
      service: odoo
    restart: unless-stopped
    env_file:
      - .docker/odoo.env
      - .docker/db-access.env
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-prod}"
      INITIAL_LANG: "$INITIAL_LANG"
      SMTP_SERVER: smtplocal
    depends_on:
      - db
      - smtp
    networks:
      default:
      inverseproxy_shared:
    labels:
      traefik.longpolling.frontend.rule: "Host:${DOMAIN_PROD};PathPrefix:/longpolling/"
      traefik.www.frontend.rule: "Host:${DOMAIN_PROD}"
      traefik.forbid-crawlers.frontend.rule: "Host:${DOMAIN_PROD};PathPrefix:/web,/web/{anything:.*},/website/info,/website/info/{anything:.*}"
      traefik.alt-0.frontend.redirect.regex: "^(.*)://${DOMAIN_PROD_ALT_0}/(.*)$$"
      traefik.alt-0.frontend.redirect.replacement: "$$1://${DOMAIN_PROD}/$$2"
      traefik.alt-0.frontend.rule: "Host:${DOMAIN_PROD_ALT_0}"
      # Main service
      ? traefik.http.middlewares.doodba-devel-13-0-13-0-prod-buffering.buffering.retryExpression
      : IsNetworkError() && Attempts() < 5
      traefik.http.middlewares.doodba-devel-13-0-13-0-prod-compress.compress: "true"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-main.entrypoints: "web-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-main.middlewares:
        doodba-devel-13-0-13-0-prod-buffering, doodba-devel-13-0-13-0-prod-compress
      traefik.http.routers.doodba-devel-13-0-13-0-prod-main.rule: "host(`${DOMAIN_PROD}`)"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-main.service: "doodba-devel-13-0-13-0-prod-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-main.tls: "true"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-main.tls.certresolver: "letsencrypt"
      traefik.http.services.doodba-devel-13-0-13-0-prod-main.loadbalancer.server.port: 8069
      # Redirect alternative domains to main domain
      traefik.http.middlewares.doodba-devel-13-0-13-0-prod-redirect2main.redirectregex.regex: "^https://([^/]+)/(.*)$$"
      traefik.http.middlewares.doodba-devel-13-0-13-0-prod-redirect2main.redirectregex.replacement: "https://${DOMAIN_PROD}/$${2}"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-altdomains.entrypoints: "web-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-altdomains.middlewares:
        doodba-devel-13-0-13-0-prod-compress, doodba-devel-13-0-13-0-prod-redirect2main
      traefik.http.routers.doodba-devel-13-0-13-0-prod-altdomains.rule: Host(`${DOMAIN_PROD_ALT_0}`)
      traefik.http.routers.doodba-devel-13-0-13-0-prod-altdomains.service: "doodba-devel-13-0-13-0-prod-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-altdomains.tls: "true"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-altdomains.tls.certresolver: "letsencrypt"
      # Longpolling service
      traefik.http.routers.doodba-devel-13-0-13-0-prod-longpolling.entrypoints: "web-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-longpolling.rule:
        "host(`${DOMAIN_PROD}`) && pathprefix(`/longpolling/`)"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-longpolling.service: "doodba-devel-13-0-13-0-prod-longpolling"
      traefik.http.services.doodba-devel-13-0-13-0-prod-longpolling.loadbalancer.server.port: 8072
      traefik.http.routers.doodba-devel-13-0-13-0-prod-longpolling.tls: "true"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-longpolling.tls.certresolver: "letsencrypt"
      # Forbid crawlers
      ? traefik.http.middlewares.doodba-devel-13-0-13-0-prod-forbid-crawlers.headers.customResponseHeaders.X-Robots-Tag
      : "noindex, nofollow"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-forbidden-crawlers.entrypoints: "web-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-forbidden-crawlers.middlewares:
        doodba-devel-13-0-13-0-prod-buffering, doodba-devel-13-0-13-0-prod-compress,
        doodba-devel-13-0-13-0-prod-forbid-crawlers
      traefik.http.routers.doodba-devel-13-0-13-0-prod-forbidden-crawlers.rule:
        Host(`${DOMAIN_PROD}`) && Path(`/web`, `/web/{anything:.*}`, `/website/info`,
        `/website/info/{anything:.*}`)
      traefik.http.routers.doodba-devel-13-0-13-0-prod-forbidden-crawlers.service: "doodba-devel-13-0-13-0-prod-main"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-forbidden-crawlers.tls: "true"
      traefik.http.routers.doodba-devel-13-0-13-0-prod-forbidden-crawlers.tls.certresolver: "letsencrypt"

  db:
    extends:
      file: common.yaml
      service: db
    env_file:
      - .docker/db-creation.env
    restart: unless-stopped

  smtp:
    extends:
      file: common.yaml
      service: smtpreal
    env_file:
      - .docker/smtp.env
    networks:
      default:
        aliases:
          - smtplocal
    restart: unless-stopped

  backup:
    extends:
      file: common.yaml
      service: backup
    env_file:
      - .docker/backup.env
      - .docker/db-access.env
    restart: unless-stopped
    depends_on:
      - db
      - smtp

networks:
  default:
    driver_opts:
      encrypted: 1

  inverseproxy_shared:
    external: true

volumes:
  backup_cache:
  filestore:
  db:
  mailconfig:
  maildata:
  maillogs:
  maillogssupervisord:
  mailstate:
